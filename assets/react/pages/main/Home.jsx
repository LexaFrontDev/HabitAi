import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import Loading from "../chunk/LoadingChunk/Loading";
import Sidebar from "../chunk/SideBar";
import StaticDate from "../chunk/DataSelectChunk/StateDataPicker";

const Pomodoro = () => {
    const [stats, setStats] = useState(null);
    const [habitsCount, setHabitsCount] = useState(null);

    useEffect(() => {
        fetch('/api/count/period')
            .then(res => res.json())
            .then(data => setStats(data.stats || {}));
    }, []);


    useEffect(() => {
        fetch('/api/get/count/habits/today')
            .then(res => res.json())
            .then(data => setHabitsCount(data.data || {}));
            console.log(habitsCount?.progress_habits)
    }, []);

    if (!stats && !habitsCount) return <Loading />

    return (
        <div id="home">
            <Sidebar />

            <div className="app-nav">
                <div className="nav-left-side">
                    <h3 className="header">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ <span className="info-icon">üí≠</span></h3>
                </div>
            </div>

            <div id="content">
                <div className="container-home">
                    <div className="stats-grid">
                        <div className="stat-card">
                            <h3>–ú–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ</h3>
                            <span>{stats?.position ?? '‚Äì'}</span>
                        </div>
                        <div className="stat-card">
                            <h3>–ü–æ–º–æ –∑–∞ –Ω–µ–¥–µ–ª—é</h3>
                            <span>–í—Ä–µ–º—è {stats?.periodLabel ?? '‚Äì'}</span><br/>
                            <span>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ {stats?.count ?? '‚Äì'}</span>
                        </div>
                        <div className="stat-card">
                            <h3>–ü—Ä–∏–≤—ã—á–∫–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è</h3>
                            <span>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ {habitsCount?.count_habits ?? '‚Äì'}</span><br/>
                            <span>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö {habitsCount?.count_done_habits ?? '‚Äì'}</span>
                        </div>
                    </div>


                    <div className="statistic">
                        <StaticDate
                            initialPosition={{ top: -25, left: 1006 }}
                            groupByHabit={true}
                            tasks={habitsCount?.progress_habits}
                        />
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Pomodoro;
