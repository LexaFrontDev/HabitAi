<?php

declare(strict_types=1);

namespace Migrations\V1\Tasks;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Creates tables for matrix column definitions and task-column junctions.
 */
final class Version_20250708_021744_Create_matric_column extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Create matric_column and matric_junction tables for Eisenhower matrix structure';
    }

    public function up(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();

        if (!$sm->tablesExist(['matric_column'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE matric_column (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    first_column_name VARCHAR(255) NOT NULL,
                    second_column_name VARCHAR(255) NOT NULL,
                    third_column_name VARCHAR(255) NOT NULL,
                    fourth_column_name VARCHAR(255) NOT NULL
                )
            SQL);
        }

        if (!$sm->tablesExist(['matric_junction'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE matric_junction (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    column_number INTEGER NOT NULL,
                    task_number INTEGER NOT NULL
                )
            SQL);
        }
    }

    public function down(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();

        if ($sm->tablesExist(['matric_junction'])) {
            $this->addSql('DROP TABLE matric_junction');
        }

        if ($sm->tablesExist(['matric_column'])) {
            $this->addSql('DROP TABLE matric_column');
        }
    }
}