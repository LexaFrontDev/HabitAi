<?php

declare(strict_types=1);

namespace Migrations\V1\Users;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20250619012538_added_users_users_setting_and_created_refresh_tokens_table extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Добавление таблицы refresh_tokens и поля users_settings в таблицу Users (если не существуют)';
    }

    public function up(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();
        if (!$sm->tablesExist(['refresh_tokens'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE refresh_tokens (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    refresh_token VARCHAR(128) NOT NULL,
                    username VARCHAR(255) NOT NULL,
                    valid TIMESTAMP NOT NULL,
                    UNIQUE (refresh_token)
                )
            SQL);
        }

        if ($sm->tablesExist(['Users'])) {
            $columns = $sm->listTableColumns('Users');
            if (!array_key_exists('users_settings', $columns)) {
                $this->addSql('ALTER TABLE Users ADD users_settings JSON DEFAULT NULL');
            }
        }
    }

    public function down(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();

        if ($sm->tablesExist(['refresh_tokens'])) {
            $this->addSql('DROP TABLE refresh_tokens');
        }

        if ($sm->tablesExist(['Users'])) {
            $columns = $sm->listTableColumns('Users');
            if (array_key_exists('users_settings', $columns)) {
                $this->addSql('ALTER TABLE Users DROP COLUMN users_settings');
            }
        }
    }
}
