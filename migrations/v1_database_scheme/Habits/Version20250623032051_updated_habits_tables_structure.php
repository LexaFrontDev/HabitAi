<?php

declare(strict_types=1);

namespace Migrations\V1\Habits;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20250623032051_updated_habits_tables_structure extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Изменение структуры таблиц habits, tasks, добавление связующих таблиц и удаление старых полей.';
    }

    public function up(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();

        if (!$sm->tablesExist('habits_data_juntion')) {
            $this->addSql(<<<'SQL'
                CREATE TABLE habits_data_juntion (
                    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    habits_id INT NOT NULL,
                    data_id INT NOT NULL,
                    data_type VARCHAR(255) NOT NULL,
                    PRIMARY KEY(id)
                ) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB
            SQL);
        }

        if (!$sm->tablesExist('habits_pomodor_junction')) {
            $this->addSql(<<<'SQL'
                CREATE TABLE habits_pomodor_junction (
                    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    pomodor_id INT NOT NULL,
                    habits_id INT NOT NULL,
                    PRIMARY KEY(id)
                ) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB
            SQL);
        }

        if ($sm->tablesExist('date_daily') && $sm->introspectTable('date_daily')->hasColumn('habit_id')) {
            $this->addSql('ALTER TABLE date_daily DROP habit_id');
        }

        if ($sm->tablesExist('date_repeat_per_month') && $sm->introspectTable('date_repeat_per_month')->hasColumn('habit_id')) {
            $this->addSql('ALTER TABLE date_repeat_per_month DROP habit_id');
        }

        if ($sm->tablesExist('date_weekly') && $sm->introspectTable('date_weekly')->hasColumn('habit_id')) {
            $this->addSql('ALTER TABLE date_weekly DROP habit_id');
        }

        if ($sm->tablesExist('habits') && $sm->introspectTable('habits')->hasColumn('date_type')) {
            $this->addSql('ALTER TABLE habits DROP date_type');
        }

        if ($sm->tablesExist('pomodoro_history') && $sm->introspectTable('pomodoro_history')->hasColumn('target_type')) {
            $this->addSql('ALTER TABLE pomodoro_history DROP target_type, DROP target_id');
        }

        if ($sm->tablesExist('purposes') && $sm->introspectTable('purposes')->hasColumn('target_type')) {
            $this->addSql('ALTER TABLE purposes DROP target_type, DROP target_id');
        }

        if ($sm->tablesExist('tasks')) {
            $columns = $sm->introspectTable('tasks')->getColumns();

            if (array_key_exists('habit_id', $columns) || array_key_exists('pomodoro_count', $columns) || array_key_exists('pomodoro_id', $columns)) {
                $this->addSql('ALTER TABLE tasks ADD purpose_id INT DEFAULT NULL');

                if (array_key_exists('habit_id', $columns)) {
                    $this->addSql('ALTER TABLE tasks DROP habit_id');
                }

                if (array_key_exists('pomodoro_count', $columns)) {
                    $this->addSql('ALTER TABLE tasks DROP pomodoro_count');
                }

                if (array_key_exists('pomodoro_id', $columns)) {
                    $this->addSql('ALTER TABLE tasks DROP pomodoro_id');
                }
            }
        }
    }

    public function down(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();

        $this->addSql('DROP TABLE IF EXISTS habits_data_juntion');
        $this->addSql('DROP TABLE IF EXISTS habits_pomodor_junction');

        if ($sm->tablesExist('date_daily')) {
            $this->addSql('ALTER TABLE date_daily ADD habit_id INT NOT NULL');
        }

        if ($sm->tablesExist('date_weekly')) {
            $this->addSql('ALTER TABLE date_weekly ADD habit_id INT NOT NULL');
        }

        if ($sm->tablesExist('tasks')) {
            $this->addSql('ALTER TABLE tasks ADD habit_id INT NOT NULL');
            $this->addSql('ALTER TABLE tasks ADD pomodoro_id INT DEFAULT NULL');
            $this->addSql('ALTER TABLE tasks CHANGE purpose_id pomodoro_count INT DEFAULT NULL');
        }

        if ($sm->tablesExist('purposes')) {
            $this->addSql('ALTER TABLE purposes ADD target_type VARCHAR(255) NOT NULL, ADD target_id INT NOT NULL');
        }

        if ($sm->tablesExist('date_repeat_per_month')) {
            $this->addSql('ALTER TABLE date_repeat_per_month ADD habit_id INT NOT NULL');
        }

        if ($sm->tablesExist('habits')) {
            $this->addSql('ALTER TABLE habits ADD date_type VARCHAR(255) NOT NULL');
        }

        if ($sm->tablesExist('pomodoro_history')) {
            $this->addSql('ALTER TABLE pomodoro_history ADD target_type VARCHAR(255) NOT NULL, ADD target_id INT DEFAULT NULL');
        }
    }
}
