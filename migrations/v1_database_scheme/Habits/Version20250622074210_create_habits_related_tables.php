<?php

declare(strict_types=1);

namespace Migrations\V1\Habits;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20250622074210_create_habits_related_tables extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Создание таблиц для системы привычек и задач + изменение pomodoro_history';
    }

    public function up(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();

        if (!$sm->tablesExist(['date_daily'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE date_daily (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    habit_id INTEGER NOT NULL,
                    mon BOOLEAN NOT NULL,
                    tue BOOLEAN NOT NULL,
                    wed BOOLEAN NOT NULL,
                    thu BOOLEAN NOT NULL,
                    fri BOOLEAN NOT NULL,
                    sat BOOLEAN NOT NULL,
                    sun BOOLEAN NOT NULL
                ) 
            SQL);
        }

        if (!$sm->tablesExist(['date_repeat_per_month'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE date_repeat_per_month (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    habit_id INTEGER NOT NULL,
                    day INTEGER NOT NULL
                ) 
            SQL);
        }

        if (!$sm->tablesExist(['date_weekly'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE date_weekly (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    habit_id INTEGER NOT NULL,
                    count_days INTEGER NOT NULL
                ) 
            SQL);
        }

        if (!$sm->tablesExist(['habits'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE habits (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    title VARCHAR(255) NOT NULL,
                    icon_url VARCHAR(255) DEFAULT NULL,
                    quote VARCHAR(255) DEFAULT NULL,
                    date_type VARCHAR(255) NOT NULL,
                    goal_in_days INTEGER DEFAULT NULL,
                    begin_date TIMESTAMP DEFAULT NULL,
                    notification_id INTEGER DEFAULT NULL
                ) 
            SQL);
        }

        if (!$sm->tablesExist(['notifications'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE notifications (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    title VARCHAR(255) NOT NULL,
                    type VARCHAR(255) NOT NULL,
                    payload VARCHAR(255) DEFAULT NULL,
                    is_active BOOLEAN NOT NULL
                ) 
            SQL);
        }

        if (!$sm->tablesExist(['purposes'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE purposes (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    target_type VARCHAR(255) NOT NULL,
                    target_id INTEGER NOT NULL,
                    cup_count INTEGER DEFAULT NULL,
                    millimeter_count INTEGER DEFAULT NULL,
                    minute_count INTEGER DEFAULT NULL,
                    hour_count INTEGER DEFAULT NULL,
                    kilometer_count INTEGER DEFAULT NULL,
                    pages_count INTEGER DEFAULT NULL,
                    new_count INTEGER DEFAULT NULL,
                    check_manually BOOLEAN DEFAULT NULL,
                    check_auto BOOLEAN DEFAULT NULL,
                    check_close BOOLEAN DEFAULT NULL
                ) 
            SQL);
        }

        if (!$sm->tablesExist(['tasks'])) {
            $this->addSql(<<<'SQL'
                CREATE TABLE tasks (
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    habit_id INTEGER NOT NULL,
                    task_type VARCHAR(255) NOT NULL,
                    title_task VARCHAR(255) NOT NULL,
                    pomodoro_count INTEGER DEFAULT NULL,
                    pomodoro_id INTEGER DEFAULT NULL,
                    notification_id INTEGER DEFAULT NULL,
                    begin_date TIMESTAMP DEFAULT NULL,
                    due_date TIMESTAMP DEFAULT NULL
                ) 
            SQL);
        }

        if ($sm->tablesExist(['pomodoro_history'])) {
            $columns = $sm->listTableColumns('pomodoro_history');
            if (!isset($columns['target_type'])) {
                $this->addSql('ALTER TABLE pomodoro_history ADD target_type VARCHAR(255) NOT NULL');
            }
            if (!isset($columns['target_id'])) {
                $this->addSql('ALTER TABLE pomodoro_history ADD target_id INTEGER NOT NULL');
            }
        }
    }

    public function down(Schema $schema): void
    {
        $sm = $this->connection->createSchemaManager();

        foreach ([
                     'date_daily',
                     'date_repeat_per_month',
                     'date_weekly',
                     'habits',
                     'notifications',
                     'purposes',
                     'tasks',
                 ] as $table) {
            if ($sm->tablesExist([$table])) {
                $this->addSql("DROP TABLE {$table}");
            }
        }

        if ($sm->tablesExist(['pomodoro_history'])) {
            $columns = $sm->listTableColumns('pomodoro_history');
            if (isset($columns['target_type'])) {
                $this->addSql('ALTER TABLE pomodoro_history DROP COLUMN target_type');
            }
            if (isset($columns['target_id'])) {
                $this->addSql('ALTER TABLE pomodoro_history DROP COLUMN target_id');
            }
        }
    }
}